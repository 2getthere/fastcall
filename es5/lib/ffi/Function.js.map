{"version":3,"sources":["../../../lib/ffi/Function.js"],"names":["_","require","Callback","assert","ref","module","exports","Function","pointer","refType","resultType","argTypes","isArray","_resultType","_argTypes","prototype","size","sizeof","alignment","alignof","indirection","name","toPointer","func","get","set","buffer","offset","value","ptr","Buffer","isBuffer","Error"],"mappings":"AAAA;;;;;;;;;;;;;;;;AAgBA;;AACA,IAAMA,IAAIC,QAAQ,QAAR,CAAV;AACA,IAAMC,WAAWD,QAAQ,YAAR,CAAjB;AACA,IAAME,SAASF,QAAQ,QAAR,CAAf;AACA,IAAMG,MAAMH,QAAQ,iBAAR,CAAZ;;AAEAI,OAAOC,OAAP,GAAiBC,QAAjB;;AAEA,IAAMC,UAAUJ,IAAIK,OAAJ,CAAY,MAAZ,CAAhB;;AAEA,SAASF,QAAT,CAAkBG,UAAlB,EAA8BC,QAA9B,EAAwC;AACpC,QAAI,EAAE,gBAAgBJ,QAAlB,CAAJ,EAAiC;AAC7B,eAAO,IAAIA,QAAJ,CAAaG,UAAb,EAAyBC,QAAzB,CAAP;AACH;AACDR,WAAOO,UAAP,EAAmB,iCAAnB;AACAP,WAAOH,EAAEY,OAAF,CAAUD,QAAV,CAAP,EAA4B,sCAA5B;;AAEA,SAAKE,WAAL,GAAmBH,UAAnB;AACA,SAAKI,SAAL,GAAiBH,QAAjB;AACH;;AAEDJ,SAASQ,SAAT,CAAmBC,IAAnB,GAA0BZ,IAAIa,MAAJ,CAAWT,OAArC;;AAEAD,SAASQ,SAAT,CAAmBG,SAAnB,GAA+Bd,IAAIe,OAAJ,CAAYX,OAA3C;;AAEAD,SAASQ,SAAT,CAAmBK,WAAnB,GAAiC,CAAjC;;AAEAb,SAASQ,SAAT,CAAmBM,IAAnB,GAA0B,UAA1B;;AAEAd,SAASQ,SAAT,CAAmBO,SAAnB,GAA+B,UAAUC,IAAV,EAAgB;AAC3C,WAAO,IAAIrB,QAAJ,CAAa,KAAKW,WAAlB,EAA+B,KAAKC,SAApC,EAA+CS,IAA/C,CAAP;AACH,CAFD;;AAIAhB,SAASQ,SAAT,CAAmBS,GAAnB,GAAyBhB,QAAQgB,GAAjC;;AAEAjB,SAASQ,SAAT,CAAmBU,GAAnB,GAAyB,SAASA,GAAT,CAAcC,MAAd,EAAsBC,MAAtB,EAA8BC,KAA9B,EAAqC;AAC5D,QAAIC,GAAJ;AACA,QAAI,cAAc,OAAOD,KAAzB,EAAgC;AAC1BC,cAAM,KAAKP,SAAL,CAAeM,KAAf,CAAN;AACL,KAFD,MAGK,IAAIE,OAAOC,QAAP,CAAgBH,KAAhB,CAAJ,EAA4B;AAC3BC,cAAMD,KAAN;AACL,KAFI,MAGA;AACC,cAAM,IAAII,KAAJ,CAAU,mDAAmDJ,KAA7D,CAAN;AACL;AACDpB,YAAQiB,GAAR,CAAYI,GAAZ,EAAiBF,MAAjB;AACD,CAZD","file":"Function.js","sourcesContent":["/*\r\nCopyright 2016 Gábor Mező (gabor.mezo@outlook.com)\r\n\r\nLicensed under the Apache License, Version 2.0 (the \"License\");\r\nyou may not use this file except in compliance with the License.\r\nYou may obtain a copy of the License at\r\n\r\n    http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nUnless required by applicable law or agreed to in writing, software\r\ndistributed under the License is distributed on an \"AS IS\" BASIS,\r\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\nSee the License for the specific language governing permissions and\r\nlimitations under the License.\r\n*/\r\n\r\n'use strict';\r\nconst _ = require('lodash');\r\nconst Callback = require('./Callback');\r\nconst assert = require('assert');\r\nconst ref = require('../ref-libs/ref');\r\n\r\nmodule.exports = Function;\r\n\r\nconst pointer = ref.refType('void');\r\n\r\nfunction Function(resultType, argTypes) {\r\n    if (!(this instanceof Function)) {\r\n        return new Function(resultType, argTypes);\r\n    }\r\n    assert(resultType, 'Argument \"resultType\" expected.');\r\n    assert(_.isArray(argTypes), 'Argument \"argTypes\" is not an array.');\r\n\r\n    this._resultType = resultType;\r\n    this._argTypes = argTypes;\r\n}\r\n\r\nFunction.prototype.size = ref.sizeof.pointer;\r\n\r\nFunction.prototype.alignment = ref.alignof.pointer;\r\n\r\nFunction.prototype.indirection = 1;\r\n\r\nFunction.prototype.name = 'Function';\r\n\r\nFunction.prototype.toPointer = function (func) {\r\n    return new Callback(this._resultType, this._argTypes, func);\r\n}\r\n\r\nFunction.prototype.get = pointer.get;\r\n\r\nFunction.prototype.set = function set (buffer, offset, value) {\r\n  var ptr\r\n  if ('function' == typeof value) {\r\n        ptr = this.toPointer(value)\r\n  } \r\n  else if (Buffer.isBuffer(value)) {\r\n        ptr = value\r\n  } \r\n  else {\r\n        throw new Error('don\\'t know how to set callback function for: ' + value)\r\n  }\r\n  pointer.set(ptr, offset);\r\n}"]}