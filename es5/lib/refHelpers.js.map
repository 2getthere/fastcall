{"version":3,"sources":["../../lib/refHelpers.js"],"names":["ref","require","exports","isPointerType","isArrayType","isUnionType","isStructType","isFunctionType","isStringType","type","_type","coerceType","indirection","name","types","CString"],"mappings":"AAAA;;AACA,IAAMA,MAAMC,QAAQ,gBAAR,CAAZ;;AAEAC,QAAQC,aAAR,GAAwBA,aAAxB;AACAD,QAAQE,WAAR,GAAsBA,WAAtB;AACAF,QAAQG,WAAR,GAAsBA,WAAtB;AACAH,QAAQI,YAAR,GAAuBA,YAAvB;AACAJ,QAAQK,cAAR,GAAyBA,cAAzB;AACAL,QAAQM,YAAR,GAAuBA,YAAvB;;AAEA,SAASL,aAAT,CAAuBM,IAAvB,EAA6B;AACzB,QAAMC,QAAQV,IAAIW,UAAJ,CAAeF,IAAf,CAAd;AACA,WAAOC,MAAME,WAAN,GAAoB,CAApB,IACHF,MAAMG,IAAN,KAAe,WADZ,IAEHH,MAAMG,IAAN,KAAe,UAFZ,IAGHH,UAAUV,IAAIc,KAAJ,CAAUC,OAHxB;AAIH;;AAED,SAASX,WAAT,CAAqBK,IAArB,EAA2B;AACvB,QAAMC,QAAQV,IAAIW,UAAJ,CAAeF,IAAf,CAAd;AACA,WAAOC,MAAMG,IAAN,KAAe,WAAf,IAA8BH,MAAME,WAAN,KAAsB,CAA3D;AACH;;AAED,SAASP,WAAT,CAAqBI,IAArB,EAA2B;AACvB,QAAMC,QAAQV,IAAIW,UAAJ,CAAeF,IAAf,CAAd;AACA,WAAOC,MAAMG,IAAN,KAAe,WAAf,IAA8BH,MAAME,WAAN,KAAsB,CAA3D;AACH;;AAED,SAASN,YAAT,CAAsBG,IAAtB,EAA4B;AACxB,QAAMC,QAAQV,IAAIW,UAAJ,CAAeF,IAAf,CAAd;AACA,WAAOC,MAAMG,IAAN,KAAe,YAAf,IAA+BH,MAAME,WAAN,KAAsB,CAA5D;AACH;;AAED,SAASL,cAAT,CAAwBE,IAAxB,EAA8B;AAC1B,QAAMC,QAAQV,IAAIW,UAAJ,CAAeF,IAAf,CAAd;AACA,WAAOC,MAAMG,IAAN,KAAe,UAAf,IAA6BH,MAAME,WAAN,KAAsB,CAA1D;AACH;;AAED,SAASJ,YAAT,CAAsBC,IAAtB,EAA4B;AACxB,QAAMC,QAAQV,IAAIW,UAAJ,CAAeF,IAAf,CAAd;AACA,WAAOC,UAAUV,IAAIc,KAAJ,CAAUC,OAA3B;AACH","file":"refHelpers.js","sourcesContent":["'use strict';\nconst ref = require('./ref-libs/ref');\n\nexports.isPointerType = isPointerType;\nexports.isArrayType = isArrayType;\nexports.isUnionType = isUnionType;\nexports.isStructType = isStructType;\nexports.isFunctionType = isFunctionType;\nexports.isStringType = isStringType;\n\nfunction isPointerType(type) {\n    const _type = ref.coerceType(type);\n    return _type.indirection > 1 || \n        _type.name === 'ArrayType' ||\n        _type.name === 'Function' ||\n        _type === ref.types.CString;\n}\n\nfunction isArrayType(type) {\n    const _type = ref.coerceType(type);\n    return _type.name === 'ArrayType' && _type.indirection === 1;\n}\n\nfunction isUnionType(type) {\n    const _type = ref.coerceType(type);\n    return _type.name === 'UnionType' && _type.indirection === 1;\n}\n\nfunction isStructType(type) {\n    const _type = ref.coerceType(type);\n    return _type.name === 'StructType' && _type.indirection === 1;\n}\n\nfunction isFunctionType(type) {\n    const _type = ref.coerceType(type);\n    return _type.name === 'Function' && _type.indirection === 1;\n}\n\nfunction isStringType(type) {\n    const _type = ref.coerceType(type);\n    return _type === ref.types.CString;\n}"]}