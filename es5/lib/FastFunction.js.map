{"version":3,"sources":["../../lib/FastFunction.js"],"names":["_","require","assert","Promise","native","dyncall","dynload","defs","callMode","FunctionDefinition","util","verify","ref","FastFunction","library","def","ptr","isObject","sync","async","_ptr","_vm","_function","_other","_type","function","findSymbol","_pLib","name","path","newCallVM","options","vmSize","_makeFunction","free","getFunction","initialize","_makeAsyncFunction","_makeSyncFunction","vmArgSetters","args","map","_findVMSetterFunc","arg","type","funcArgs","range","length","n","funcBody","i","Ctx","fn","vm","setVM","setVMAndReset","setter","indirection","specPtrDef","callback","struct","union","array","func","makePtr","cb","callerFunc","_makeCallerFunc","innerFunc","innerFuncArgs","concat","Function","err","Error","ctx","apply","arguments","_initFunction","hasPtrArg","Boolean","filter","head","ptrs","push","promisify","self","Object","defineProperties","get","findFastcallFunc","isPtr","resultType","toFastcallName","isFunction","result","derefType","module","exports"],"mappings":"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","file":"FastFunction.js","sourcesContent":["'use strict';\nconst _ = require('lodash');\nconst assert = require('assert');\nconst Promise = require('bluebird');\nconst native = require('./native');\nconst dyncall = native.dyncall;\nconst dynload = native.dynload;\nconst defs = require('./defs');\nconst callMode = defs.callMode;\nconst FunctionDefinition = require('./FunctionDefinition');\nconst util = require('util');\nconst verify = require('./verify');\nconst ref = require('./ref-libs/ref');\n\nclass FastFunction extends FunctionDefinition {\n    constructor(library, def, callMode, ptr) {\n        assert(_.isObject(library), '\"library\" is not an object.');\n        assert(callMode === defs.callMode.sync || callMode === defs.callMode.async, '\"callMode\" is invalid: ' + callMode);\n        super(library, def);\n        this.callMode = callMode;\n        this._ptr = ptr;\n        this._vm = null;\n        this._function = null;\n        this._other = null;\n        this._type.function = this;\n    }\n\n    initialize() {\n        if (!this._ptr) {\n            this._ptr = dynload.findSymbol(this.library._pLib, this.name);\n        }\n        assert(this._ptr, `Symbol \"${ this.name }\" not found in library \"${ this.library.path }\".`);\n        this._vm = dyncall.newCallVM(this.library.options.vmSize);\n        this._function = this._makeFunction();\n    }\n\n    release() {\n        dyncall.free(this._vm);\n    }\n\n    getFunction() {\n        assert(this._function, this.name + ' is not initialized.');\n        return this._function;\n    }\n\n    sync() {\n        if (this.callMode === defs.callMode.sync) {\n            return this.getFunction();\n        }\n        if (!this._other) {\n            this._other = new FastFunction(this.library, this, defs.callMode.sync, this._ptr);\n            this._other.initialize();\n        }\n        return this._other.getFunction();\n    }\n\n    async() {\n        if (this.callMode === defs.callMode.async) {\n            return this.getFunction();\n        }\n        if (!this._other) {\n            this._other = new FastFunction(this.library, this, defs.callMode.async, this._ptr);\n            this._other.initialize();\n        }\n        return this._other.getFunction();\n    }\n\n    _makeFunction() {\n        if (this.callMode === defs.callMode.async) {\n            return this._makeAsyncFunction();\n        }\n        return this._makeSyncFunction();\n    }\n\n    _makeSyncFunction() {\n        const vmArgSetters = this.args.map(arg => this._findVMSetterFunc(arg.type));\n        const funcArgs = _.range(vmArgSetters.length).map(n => 'arg' + n);\n        let funcBody = 'this.setVM(this.vm);';\n        for (let i = 0; i < vmArgSetters.length; i++) {\n            funcBody += `this.argSetter${ i }(arg${ i });`;\n        }\n        funcBody += 'return this.callerFunc();';\n\n        class Ctx {\n            constructor(fn) {\n                this.vm = fn._vm;\n                this.setVM = dyncall.setVMAndReset;\n                let i = 0;\n                for (const setter of vmArgSetters) {\n                    if (setter.type.indirection === 2) {\n                        const specPtrDef = setter.type.callback || \n                            setter.type.struct || \n                            setter.type.union ||\n                            setter.type.array;\n                        if (specPtrDef) {\n                            this['argSetter' + i++] =\n                                cb => setter.func(specPtrDef.makePtr(cb));\n                            continue;\n                        }\n                    }\n                    this['argSetter' + i++] = setter.func;\n                }\n                this.callerFunc = fn._makeCallerFunc();\n            }\n        }\n\n        let innerFunc;\n        try {\n            const innerFuncArgs = funcArgs.concat([funcBody]);\n            innerFunc = new Function(...innerFuncArgs);\n        }\n        catch (err) {\n            throw Error('Invalid function body: ' + funcBody);\n        }\n        const ctx = new Ctx(this);\n        const func = function () {\n            return innerFunc.apply(ctx, arguments);\n        };\n        return this._initFunction(func);\n    }\n\n    _makeAsyncFunction() {\n        const vmArgSetters = this.args.map(arg => this._findVMSetterFunc(arg.type));\n        const hasPtrArg = Boolean(_(vmArgSetters).filter(setter => setter.type.indirection > 1).head());\n        const funcArgs = _.range(vmArgSetters.length).map(n => 'arg' + n);\n        let funcBody = hasPtrArg ? 'var ptrs = [];' : '';\n        funcBody += 'this.setVM(this.vm);';\n        for (let i = 0; i < vmArgSetters.length; i++) {\n            const setter = vmArgSetters[i];\n            if (setter.type.indirection > 1) {\n                funcBody += `this.argSetter${ i }(arg${ i }, ptrs);`;\n            }\n            else {\n                funcBody += `this.argSetter${ i }(arg${ i });`;\n            }\n        }\n        if (hasPtrArg) {\n            funcBody += 'return this.callerFunc(this.vm).finally(() => ptrs = null);';\n        }\n        else {\n            funcBody += 'return this.callerFunc(this.vm);';\n        }\n\n        class Ctx {\n            constructor(fn) {\n                this.setVM = dyncall.setVM;\n                let i = 0;\n                for (const setter of vmArgSetters) {\n                    if (setter.type.indirection > 1) {\n                        this['argSetter' + i++] = (ptr, ptrs) => {\n                            let _ptr;\n                            const specPtrDef = setter.type.callback || \n                                setter.type.struct || \n                                setter.type.union ||\n                                setter.type.array;\n                            if (setter.type.indirection === 2 && specPtrDef) {\n                                _ptr = specPtrDef.makePtr(ptr);\n                            }\n                            else {\n                                _ptr = ptr;\n                            }\n                            ptrs.push(_ptr);\n                            setter.func(_ptr);\n                        };\n                    }\n                    else {\n                        this['argSetter' + i++] = setter.func;\n                    }\n                }\n                this.callerFunc = Promise.promisify(fn._makeCallerFunc());\n                this.vm = null;\n            }\n        }\n\n        const ctx = new Ctx(this);\n        const vmSize = this.library.options.vmSize;\n\n        let innerFunc;\n        try {\n            innerFunc = new Function(...funcArgs.concat([funcBody]));\n        }\n        catch (err) {\n            throw Error('Invalid function body: ' + funcBody);\n        }\n\n        const func = function () {\n            ctx.vm = dyncall.newCallVM(vmSize);\n            return innerFunc.apply(ctx, arguments);\n        };\n        return this._initFunction(func);\n    }\n\n    _initFunction(func) {\n        func.function = this;\n        func.type = this.type;\n        const self = this;\n        Object.defineProperties(func, {\n            sync: {\n                get: function () {\n                    return self.sync();\n                }\n            },\n            async: {\n                get: function () {\n                    return self.async();\n                }\n            }\n        });\n        return func;\n    }\n\n    _findVMSetterFunc(type) {\n        return this.findFastcallFunc(dyncall, 'arg', type);\n    }\n\n    _makeCallerFunc() {\n        let name;\n        let isPtr = false;\n        let async = false;\n        if (this.resultType.indirection > 1) {\n            name = 'callPointer';\n            isPtr = true;\n        }\n        else {\n            name = 'call' + this.toFastcallName(this.resultType.name);\n        }\n        if (this.callMode === defs.callMode.async) {\n            name += 'Async';\n            async = true;\n        }\n\n        const func = dyncall[name];\n        verify(_.isFunction(func));\n\n        if (async) {\n            if (isPtr) {\n                return (vm, callback) => {\n                    func(vm, this._ptr, (err, result) => {\n                        if (err) {\n                            return callback(err);\n                        }\n                        result.type = ref.derefType(this.resultType);\n                        callback(null, result);\n                    });\n                }\n            }\n\n            return (vm, callback) => func(vm, this._ptr, callback);\n        }\n\n        if (isPtr) {\n            return () => {\n                const result = func(this._ptr);\n                result.type = ref.derefType(this.resultType);\n                return result;\n            }\n        }\n\n        return () => func(this._ptr);\n    }\n}\n\nmodule.exports = FastFunction;"]}