{"version":3,"sources":["../../lib/Library.js"],"names":["_","require","native","assert","Promise","async","coroutine","fs","promisifyAll","path","defs","callMode","FastFunction","FastCallback","FastStruct","FastUnion","FastArray","defaultOptions","defaultCallMode","sync","vmSize","Library","options","isString","length","Object","freeze","defaults","_pLib","_initialized","_released","_loop","functions","callbacks","structs","unions","arrays","interface","dynload","loadLibrary","callback","newLoop","values","func","release","freeLoop","freeLibrary","def","syncFunction","asyncFunction","_addFunction","_addCallback","_addStruct","_addUnion","_addArray","type","name","initialize","getFunction","cb","getFactory","struct","union","array","moduleDir","doFind","module","exports","rootDir","join","findIn","libPath","Error","subDir","dir","files","readdirAsync","rex","RegExp","file","test"],"mappings":"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","file":"Library.js","sourcesContent":["'use strict';\nconst _ = require('lodash');\nconst native = require('./native');\nconst assert = require('assert');\nconst Promise = require('bluebird');\nconst async = Promise.coroutine;\nconst fs = Promise.promisifyAll(require('fs'));\nconst path = require('path');\nconst defs = require('./defs');\nconst callMode = defs.callMode;\nconst FastFunction = require('./FastFunction');\nconst FastCallback = require('./FastCallback');\nconst FastStruct = require('./FastStruct');\nconst FastUnion = require('./FastUnion');\nconst FastArray = require('./FastArray');\n\nconst defaultOptions = {\n    defaultCallMode: callMode.sync,\n    vmSize: 512\n};\n\nclass Library {\n    constructor(path, options) {\n        assert(_.isString(path) && path.length, 'Argument \"path\" should be a non-empty string.');\n        this.path = path;\n        this.options = Object.freeze(_.defaults(options, defaultOptions));\n        assert(this.options.defaultCallMode === callMode.sync ||\n            this.options.defaultCallMode === callMode.async,\n            '\"options.callMode\" is invalid.');\n        this._pLib = null;\n        this._initialized = false;\n        this._released = false;\n        this._loop = null;\n        this.functions = {};\n        this.callbacks = {};\n        this.structs = {};\n        this.unions = {};\n        this.arrays = {};\n        this.interface = {};\n    }\n\n    initialize() {\n        assert(!this._released, `Library \"${ this.path }\" has already been released.`);\n        if (this._initialized) {\n            return;\n        }\n        this._pLib = native.dynload.loadLibrary(this.path);\n        this._loop = native.callback.newLoop();\n        this._initialized = true;\n        return this;\n    }\n\n    release() {\n        if (!this._initialized) {\n            return;\n        }\n        if (this._released) {\n            return;\n        }\n        for (const func of _.values(this.functions)) {\n            func.release();\n        }\n        native.callback.freeLoop(this._loop);\n        native.dynload.freeLibrary(this._pLib);\n        this._released = true;\n        return this;\n    }\n\n    function(def) {\n        return this.options.defaultCallMode === callMode.sync ?\n            this.syncFunction(def) :\n            this.asyncFunction(def);\n    }\n\n    syncFunction(def) {\n        this._addFunction(new FastFunction(this, def, callMode.sync));\n        return this;\n    }\n\n    asyncFunction(def) {\n        this._addFunction(new FastFunction(this, def, callMode.async));\n        return this;\n    }\n\n    callback(def) {\n        this._addCallback(new FastCallback(this, def));\n        return this;\n    }\n\n    struct(def) {\n        this._addStruct(new FastStruct(this, def));\n        return this;\n    }\n\n    union(def) {\n        this._addUnion(new FastUnion(this, def));\n        return this;\n    }\n\n    array(def) {\n        this._addArray(new FastArray(this, def));\n        return this;\n    }\n\n    findRefDeclaration(type) {\n        assert(_.isString(type), 'Argument is not a string.');\n        return this.structs[type] || this.unions[type] || this.arrays[type] || null;\n    }\n\n    _addFunction(func) {\n        assert(!this.functions[func.name], `Function ${ func.name } already declared.`);\n        this.initialize();\n        func.initialize();\n        this.functions[func.name] = func;\n        this.interface[func.name] = func.getFunction();\n    }\n\n    _addCallback(cb) {\n        assert(!this.callbacks[cb.name], `Callback ${ cb.name } already declared.`);\n        this.initialize();\n        cb.initialize();\n        this.callbacks[cb.name] = cb;\n        this.interface[cb.name] = cb.getFactory();\n    }\n\n    _addStruct(struct) {\n        assert(!this.structs[struct.name], `Union ${ struct.name } already declared.`);\n        this.initialize();\n        this.structs[struct.name] = struct;\n        this.interface[struct.name] = struct.getFactory();\n    }\n\n    _addUnion(union) {\n        assert(!this.unions[union.name], `Union ${ union.name } already declared.`);\n        this.initialize();\n        this.unions[union.name] = union;\n        this.interface[union.name] = union.getFactory();\n    }\n\n    _addArray(array) {\n        assert(!this.arrays[array.name], `Array ${ array.name } already declared.`);\n        this.initialize();\n        this.arrays[array.name] = array;\n        this.interface[array.name] = array.getFactory();\n    }\n\n    static get callMode() {\n        return callMode;\n    }\n\n    static find(moduleDir, name) {\n        return doFind(moduleDir, name);\n    }\n}\n\nmodule.exports = Library;\n\nvar doFind = async(function* (moduleDir, name) {\n    assert(_.isString(moduleDir), 'Agument is not a string.');\n\n    const rootDir = path.join(moduleDir, 'build');\n    const libPath =\n        (yield findIn(rootDir, 'Debug', name)) ||\n        (yield findIn(rootDir, 'Release', name));\n    if (!libPath) {\n        throw new Error(`${ name } library not found.`);\n    }\n    return libPath;\n});\n\nvar findIn = async(function* (rootDir, subDir, name) {\n    const dir = path.join(rootDir, subDir);\n    let files;\n    try {\n        files = yield fs.readdirAsync(dir);\n    }\n    catch (err) {\n        return null;\n    }\n    const rex = new RegExp(name);\n    for (const file of files) {\n        if (rex.test(file)) {\n            return path.join(dir, file);\n        }\n    }\n    return null;\n});"]}