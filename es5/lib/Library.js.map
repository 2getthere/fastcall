{"version":3,"sources":["../../lib/Library.js"],"names":["_","require","native","assert","Promise","async","coroutine","fs","promisifyAll","path","defs","FastFunction","FastCallback","FastStruct","FastUnion","FastArray","verify","queue","defaultOptions","defaultCallMode","callMode","sync","syncMode","none","vmSize","Library","options","isString","length","Object","freeze","defaults","_pLib","_initialized","_released","_loop","_mutex","_queue","functions","callbacks","structs","unions","arrays","interface","dynload","loadLibrary","callback","newLoop","lock","mutex","newMutex","Buffer","values","func","release","freeLoop","freeLibrary","def","syncFunction","asyncFunction","_addFunction","_addCallback","_addStruct","_addUnion","_addArray","type","name","initialize","getFunction","cb","getFactory","struct","union","array","unlock","f","next","moduleDir","doFind","module","exports","rootDir","join","findIn","libPath","Error","subDir","dir","files","readdirAsync","rex","RegExp","file","test"],"mappings":"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","file":"Library.js","sourcesContent":["'use strict';\nconst _ = require('lodash');\nconst native = require('./native');\nconst assert = require('assert');\nconst Promise = require('bluebird');\nconst async = Promise.coroutine;\nconst fs = Promise.promisifyAll(require('fs'));\nconst path = require('path');\nconst defs = require('./defs');\nconst FastFunction = require('./FastFunction');\nconst FastCallback = require('./FastCallback');\nconst FastStruct = require('./FastStruct');\nconst FastUnion = require('./FastUnion');\nconst FastArray = require('./FastArray');\nconst verify = require('./verify');\nconst queue = require('./queue');\n\nconst defaultOptions = {\n    defaultCallMode: defs.callMode.sync,\n    syncMode: defs.syncMode.none,\n    vmSize: 512\n};\n\nclass Library {\n    constructor(path, options) {\n        assert(_.isString(path) && path.length, 'Argument \"path\" should be a non-empty string.');\n        this.path = path;\n        this.options = Object.freeze(_.defaults(options, defaultOptions));\n        assert(this.options.defaultCallMode === defs.callMode.sync ||\n            this.options.defaultCallMode === defs.callMode.async,\n            '\"options.callMode\" is invalid.');\n        assert(this.options.syncMode >= defs.syncMode.none && this.options.syncMode <= defs.syncMode.queue,\n            '\"options.syncMode\" is invalid.');\n        this._pLib = null;\n        this._initialized = false;\n        this._released = false;\n        this._loop = null;\n        this._mutex = null;\n        this._queue = null;\n        this.functions = {};\n        this.callbacks = {};\n        this.structs = {};\n        this.unions = {};\n        this.arrays = {};\n        this.interface = {};\n    }\n\n    get synchronized() {\n        return this.options.syncMode === defs.syncMode.lock;\n    }\n\n    get queued() {\n        return this.options.syncMode === defs.syncMode.queue;\n    }\n\n    initialize() {\n        assert(!this._released, `Library \"${ this.path }\" has already been released.`);\n        if (this._initialized) {\n            return;\n        }\n        this._pLib = native.dynload.loadLibrary(this.path);\n        this._loop = native.callback.newLoop();\n        if (this.options.syncMode === defs.syncMode.lock) {\n            this._mutex = native.mutex.newMutex();\n            verify(this._mutex instanceof Buffer);\n            \n        }\n        this._initialized = true;\n        return this;\n    }\n\n    release() {\n        if (!this._initialized) {\n            return;\n        }\n        if (this._released) {\n            return;\n        }\n        for (const func of _.values(this.functions)) {\n            func.release();\n        }\n        native.callback.freeLoop(this._loop);\n        native.dynload.freeLibrary(this._pLib);\n        this._released = true;\n        return this;\n    }\n\n    function(def) {\n        return this.options.defaultCallMode === defs.callMode.sync ?\n            this.syncFunction(def) :\n            this.asyncFunction(def);\n    }\n\n    syncFunction(def) {\n        this._addFunction(new FastFunction(this, def, defs.callMode.sync));\n        return this;\n    }\n\n    asyncFunction(def) {\n        this._addFunction(new FastFunction(this, def, defs.callMode.async));\n        return this;\n    }\n\n    callback(def) {\n        this._addCallback(new FastCallback(this, def));\n        return this;\n    }\n\n    struct(def) {\n        this._addStruct(new FastStruct(this, def));\n        return this;\n    }\n\n    union(def) {\n        this._addUnion(new FastUnion(this, def));\n        return this;\n    }\n\n    array(def) {\n        this._addArray(new FastArray(this, def));\n        return this;\n    }\n\n    findRefDeclaration(type) {\n        assert(_.isString(type), 'Argument is not a string.');\n        return this.structs[type] || this.unions[type] || this.arrays[type] || null;\n    }\n\n    _addFunction(func) {\n        assert(!this.functions[func.name], `Function ${ func.name } already declared.`);\n        this.initialize();\n        func.initialize();\n        this.functions[func.name] = func;\n        this.interface[func.name] = func.getFunction();\n    }\n\n    _addCallback(cb) {\n        assert(!this.callbacks[cb.name], `Callback ${ cb.name } already declared.`);\n        this.initialize();\n        cb.initialize();\n        this.callbacks[cb.name] = cb;\n        this.interface[cb.name] = cb.getFactory();\n    }\n\n    _addStruct(struct) {\n        assert(!this.structs[struct.name], `Union ${ struct.name } already declared.`);\n        this.initialize();\n        this.structs[struct.name] = struct;\n        this.interface[struct.name] = struct.getFactory();\n    }\n\n    _addUnion(union) {\n        assert(!this.unions[union.name], `Union ${ union.name } already declared.`);\n        this.initialize();\n        this.unions[union.name] = union;\n        this.interface[union.name] = union.getFactory();\n    }\n\n    _addArray(array) {\n        assert(!this.arrays[array.name], `Array ${ array.name } already declared.`);\n        this.initialize();\n        this.arrays[array.name] = array;\n        this.interface[array.name] = array.getFactory();\n    }\n\n    _lock() {\n        native.mutex.lock(this._mutex);\n    }\n\n    _unlock() {\n        native.mutex.unlock(this._mutex);\n    }\n\n    _assertQueueEmpty() {\n        assert(!queue.length, 'Calling functions synchronously is forbidden while there are asynchronous functions enqueued.');\n    }\n\n    _enqueue(f) {\n        return queue.next(f);\n    }\n\n    static get callMode() {\n        return defs.callMode;\n    }\n\n    static get syncMode() {\n        return defs.syncMode;\n    }\n\n    static find(moduleDir, name) {\n        return doFind(moduleDir, name);\n    }\n}\n\nmodule.exports = Library;\n\nvar doFind = async(function* (moduleDir, name) {\n    assert(_.isString(moduleDir), 'Agument is not a string.');\n\n    const rootDir = path.join(moduleDir, 'build');\n    const libPath =\n        (yield findIn(rootDir, 'Debug', name)) ||\n        (yield findIn(rootDir, 'Release', name));\n    if (!libPath) {\n        throw new Error(`${ name } library not found.`);\n    }\n    return libPath;\n});\n\nvar findIn = async(function* (rootDir, subDir, name) {\n    const dir = path.join(rootDir, subDir);\n    let files;\n    try {\n        files = yield fs.readdirAsync(dir);\n    }\n    catch (err) {\n        return null;\n    }\n    const rex = new RegExp(name);\n    for (const file of files) {\n        if (rex.test(file)) {\n            return path.join(dir, file);\n        }\n    }\n    return null;\n});"]}