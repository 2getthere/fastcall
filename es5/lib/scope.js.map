{"version":3,"sources":["../../lib/scope.js"],"names":["enumDisposable","_","require","verify","a","ert","assert","Promise","module","exports","scope","body","isFunction","begin","result","then","asyncResult","escape","end","asyncError","err","_add","disposable","add","async","coroutine","value","layers","push","Set","last","pop","values","dispose","layer","enabled","Disposable","currentLayer","length","propagate","prevLayer","delete","isArray","item","Map","isObject","key","hasOwnProperty"],"mappings":"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","file":"scope.js","sourcesContent":["/*\nCopyright 2016 Gábor Mező (gabor.mezo@outlook.com)\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n*/\n\n'use strict';\nconst _ = require('lodash');\nconst verify = require('./verify');\nconst a = verify.a;\nconst ert = verify.ert;\nconst assert = require('assert');\nconst Promise = require('bluebird');\n\nmodule.exports = scope;\n\nfunction scope(body) {\n    assert(_.isFunction(body), 'Body should be a function.');\n    begin();\n    try {\n        const result = body(scope);\n        if (result) {\n            if (_.isFunction(result.then)) {\n                return result\n                    .then(function (asyncResult) {\n                        escape(asyncResult, true);\n                        end();\n                        return asyncResult;\n                    },\n                    function (asyncError) {\n                        end();\n                        throw asyncError;\n                    });\n            }\n            escape(result, true);\n        }\n        end();\n        return result;\n    }\n    catch (err) {\n        end();\n        throw err;\n    }\n}\n\nscope._add = function (disposable) {\n    add(disposable);\n};\n\nscope.async = function (body) {\n    assert(_.isFunction(body), 'Body should be a function.');\n    return scope(Promise.coroutine(body));\n};\n\nscope.escape = function (value) {\n    return escape(value);\n};\n\nscope.begin = begin;\nscope.end = end;\n\nconst layers = [];\n\nfunction begin() {\n    layers.push(new Set());\n}\n\nfunction end() {\n    const last = layers.pop();\n    if (last) {\n        for (let disposable of last.values()) {\n            disposable.dispose();\n        }\n    }\n}\n\nfunction add(disposable, layer) {\n    if (verify.enabled) {\n        const Disposable = scope.Disposable;\n        a&&ert(disposable instanceof Disposable);\n    }\n    const currentLayer = layer || (layers.length ? layers[layers.length - 1] : null);\n    if (currentLayer) {\n        currentLayer.add(disposable);\n    }\n}\n\nfunction escape(result, propagate) {\n    let currentLayer = null;\n    let prevLayer = null;\n    if (layers.length > 1) {\n        currentLayer = layers[layers.length - 1];\n        if (propagate) {\n            prevLayer = layers[layers.length - 2];\n        }\n    }\n    else if (layers.length) {\n        currentLayer = layers[layers.length - 1];\n    }\n\n    if (currentLayer) {\n        for (let disposable of enumDisposable(result)) {\n            currentLayer.delete(disposable);\n            if (prevLayer) {\n                prevLayer.add(disposable);\n            }\n        }\n    }\n}\n\nfunction* enumDisposable(result) {\n    const Disposable = scope.Disposable;\n    if (result instanceof Disposable) {\n        yield result;\n    }\n    else if (_.isArray(result)) {\n        for (let item of result) {\n            yield* enumDisposable(item);\n        }\n    }\n    else if (result instanceof Map || result instanceof Set) {\n        for (let item of result.values()) {\n            yield* enumDisposable(item);\n        }\n    }\n    else if (_.isObject(result)) {\n        for (let key in result) {\n            if (result.hasOwnProperty(key)) {\n                yield* enumDisposable(result[key]);\n            }\n        }\n    }\n}"]}