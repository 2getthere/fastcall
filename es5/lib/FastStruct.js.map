{"version":3,"sources":["lib/FastStruct.js"],"names":["_","require","assert","verify","StructType","FastStruct","library","def","isObject","_type","_refType","ref","refType","types","void","factory","makePtr","value","struct","ptr","type","Buffer","undefined","callback","TypeError","module","exports"],"mappings":"AAAA;;;;;;AACA,IAAMA,IAAIC,QAAQ,QAAR,CAAV;AACA,IAAMC,SAASD,QAAQ,QAAR,CAAf;AACA,IAAME,SAASF,QAAQ,UAAR,CAAf;AACA,IAAMG,aAAaH,QAAQ,2BAAR,CAAnB;;IAEMI,U;AACF,wBAAYC,OAAZ,EAAqBC,GAArB,EAA0B;AAAA;;AACtBL,eAAOF,EAAEQ,QAAF,CAAWF,OAAX,CAAP,EAA4B,6BAA5B;AACAJ,eAAOF,EAAEQ,QAAF,CAAWD,GAAX,CAAP,EAAwB,yBAAxB;AACA,aAAKD,OAAL,GAAeA,OAAf;AACA,aAAKG,KAAL,GAAa,IAAIL,UAAJ,CAAeG,GAAf,CAAb;AACA,aAAKG,QAAL,GAAgBC,IAAIC,OAAJ,CAAYD,IAAIE,KAAJ,CAAUC,IAAtB,CAAhB;AACH;;;;qCAEY;AAAA;;AACT,gBAAMC,UAAU,SAAVA,OAAU;AAAA,uBAAS,MAAKC,OAAL,CAAaC,KAAb,CAAT;AAAA,aAAhB;AACAF,oBAAQG,MAAR,GAAiB,IAAjB;AACA,mBAAOH,OAAP;AACH;;;gCAEOE,K,EAAO;AACX,gBAAIA,KAAJ,EAAW;AACP,oBAAIA,MAAMC,MAAN,KAAiB,IAArB,EAA2B;AACvB,2BAAOD,KAAP;AACH;AACD,oBAAIjB,EAAEQ,QAAF,CAAWS,KAAX,CAAJ,EAAuB;AACnB,wBAAME,MAAM,IAAI,KAAKV,KAAT,CAAeQ,KAAf,CAAZ;AACAE,wBAAID,MAAJ,GAAa,IAAb;AACAf,2BAAOgB,IAAIC,IAAJ,KAAa,KAAKV,QAAzB;AACA,2BAAOS,GAAP;AACH;AACD,oBAAIF,iBAAiBI,MAArB,EAA6B;AACzB,wBAAIJ,MAAMG,IAAN,KAAeE,SAAnB,EAA8B;AAC1BL,8BAAMG,IAAN,GAAa,KAAKV,QAAlB;AACAO,8BAAMM,QAAN,GAAiB,IAAjB;AACA,+BAAON,KAAP;AACH;AACD,0BAAM,IAAIO,SAAJ,CAAc,iCAAd,CAAN;AACH;AACJ,aAlBD,MAmBK,IAAIP,UAAU,IAAd,EAAoB;AACrB,uBAAO,IAAP;AACH;AACD,kBAAM,IAAIO,SAAJ,CAAc,8BAA8BP,KAA5C,CAAN;AACH;;;;;;AAGLQ,OAAOC,OAAP,GAAiBrB,UAAjB","file":"FastStruct.js","sourcesContent":["'use strict';\nconst _ = require('lodash');\nconst assert = require('assert');\nconst verify = require('./verify');\nconst StructType = require('./TooTallNates/ref-struct')\n\nclass FastStruct {\n    constructor(library, def) {\n        assert(_.isObject(library), '\"library\" is not an object.');\n        assert(_.isObject(def), '\"def\" is not an object.');\n        this.library = library;\n        this._type = new StructType(def);\n        this._refType = ref.refType(ref.types.void);\n    }\n\n    getFactory() {\n        const factory = value => this.makePtr(value);\n        factory.struct = this;\n        return factory;\n    }\n\n    makePtr(value) {\n        if (value) {\n            if (value.struct === this) {\n                return value;\n            }\n            if (_.isObject(value)) {\n                const ptr = new this._type(value);\n                ptr.struct = this;\n                verify(ptr.type === this._refType);\n                return ptr;\n            }\n            if (value instanceof Buffer) {\n                if (value.type === undefined) {\n                    value.type = this._refType;\n                    value.callback = this;\n                    return value;\n                }\n                throw new TypeError('Buffer is not a struct pointer.');\n            }\n        }\n        else if (value === null) {\n            return null;\n        }\n        throw new TypeError('Cannot make struct from: ' + value);\n    }\n}\n\nmodule.exports = FastStruct;"]}