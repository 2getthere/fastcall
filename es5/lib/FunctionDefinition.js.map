{"version":3,"sources":["lib/FunctionDefinition.js"],"names":["_","require","assert","verify","ref","util","IS_X64","process","arch","FunctionDefinition","library","def","isObject","isString","parseString","resultType","name","args","Object","freeze","isPlainObject","parseObject","TypeError","length","isArray","signature","_makeSignature","map","format","getTypeName","arg","type","join","function","callback","typeName","upperFirst","camelCase","replace","api","prefix","indirection","toFastcallName","func","isFunction","argTypes","a","getTypeCode","t","module","exports","parts","exec","makeRef","trim","split","i","pos","lastIndexOf","part1","substr","part2","keys","arr","push","value","callbackType","makeCallbackType","coerceType","code","callbacks","refType","types","void","getTypeode"],"mappings":"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","file":"FunctionDefinition.js","sourcesContent":["'use strict';\nconst _ = require('lodash');\nconst assert = require('assert');\nconst verify = require('./verify');\nconst ref = require('./TooTallNates/ref');\nconst util = require('util');\n\nconst IS_X64 = process.arch === 'x64';\n\nclass FunctionDefinition {\n    constructor(library, def) {\n        assert(_.isObject(library));\n        this.library = library;\n        if (_.isString(def)) {\n            def = parseString(library, def);\n            this.resultType = def.resultType;\n            this.name = def.name;\n            this.args = Object.freeze(def.args);\n        }\n        else if (_.isPlainObject(def)) {\n            def = parseObject(library, def);\n            this.resultType = def.resultType;\n            this.name = def.name;\n            this.args = Object.freeze(def.args);\n        }\n        else if (def.resultType && def.name && def.args) {\n            this.resultType = def.resultType;\n            this.name = def.name;\n            this.args = Object.freeze(def.args);\n        }\n        else {\n            throw new TypeError('Invalid function definition type.');\n        }\n\n        assert(_.isObject(this.resultType));\n        assert(_.isString(this.name) && this.name.length);\n        assert(_.isArray(this.args));\n\n        this.signature = this._makeSignature();\n    }\n\n    toString() {\n        let args = this.args.map(arg => util.format('%s %s', getTypeName(arg.type), arg.name)).join(', ');\n        return util.format('%s %s(%s)', getTypeName(this.resultType), this.name, args);\n\n        function getTypeName(type) {\n            if (type.function) {\n                return type.function.name;\n            }\n            if (type.callback) {\n                return type.callback.name;\n            }\n            return type.name;\n        }\n    }\n\n    toFastcallName(typeName) {\n        return _.upperFirst(_.camelCase(typeName)).replace('Uint', 'UInt');\n    }\n\n    findFastcallFunc(api, prefix, type) {\n        const name = prefix + (type.indirection > 1 ? 'Pointer' : this.toFastcallName(type.name));\n        const func = api[name];\n        verify(_.isFunction(func));\n        return { name, type, func };\n    }\n\n    _makeSignature() {\n        const argTypes =\n            this.args\n                .map(a => a.type)\n                .map(t => getTypeCode(t));\n\n        return `${ argTypes })${ getTypeCode(this.resultType) }`;\n    }\n}\n\nmodule.exports = FunctionDefinition;\n\nfunction parseString(library, def) {\n    let parts = /^\\s*([\\w_][\\w\\d_]*\\s*\\**)\\s*([\\w_][\\w\\d_]*)\\s*\\((.*)\\)\\s*$/.exec(def);\n    assert(parts && parts.length === 4, 'Invalid function definition format.');\n    const resultType = makeRef(library, parts[1]);\n    const name = parts[2].trim();\n    let args = parts[3].trim();\n    args = args ? args.split(',') : [];\n    let i = -1;\n    args = args.map(arg => {\n        i++;\n        arg = arg.trim();\n        assert(arg, 'Invalid argument: ' + arg);\n        let pos = _.lastIndexOf(arg, ' ');\n        if (pos === -1) {\n            pos = _.lastIndexOf(arg, '*');\n        }\n        if (pos === -1) {\n            pos = arg.length - 1;\n        }\n        let part1 = arg.substr(0, pos + 1).trim();\n        let part2 = arg.substr(pos + 1).trim();\n        if (!part1 && part2) {\n            part1 = part2;\n            part2 = null;\n        }\n        assert(part1, 'Invalid argument: ' + arg);\n        return {\n            name: part2 || 'arg' + i,\n            type: makeRef(library, part1)\n        };\n    });\n    return { resultType, name, args };\n}\n\nfunction parseObject(library, def) {\n    // node-ffi format\n    const keys = _.keys(def);\n    assert(keys.length === 1, 'Object has invalid number of keys.');\n    const name = keys[0];\n    const arr = def[name];\n    assert(_.isArray(arr), 'Function definition array expected.');\n    assert(arr.length > 1, 'Function definition array is empty.');\n    const resultType = makeRef(library, arr[0]);\n    const args = [];\n    if (_.isArray(arr[1])) {\n        for (let i = 0; i < arr[1].length; i++) {\n            args.push({\n                name: 'arg' + i,\n                type: makeRef(library, arr[1][i])\n            });\n        }\n    }\n    return { resultType, name, args };\n}\n\nfunction makeRef(library, value) {\n    if (_.isString(value)) {\n        const callbackType = makeCallbackType(library, value);\n        if (callbackType) {\n            return callbackType;\n        }\n    }\n    const type = ref.coerceType(value);\n    type.code = getTypeCode(type);\n    return type;\n}\n\nfunction makeCallbackType(library, value) {\n    const callback = library.callbacks[value];\n    if (callback) {\n        const type = ref.refType(ref.types.void);\n        type.callback = callback;\n        type.code = getTypeCode(type);\n        return type;\n    }\n    return null;\n}\n\nfunction getTypeCode(type) {\n    // ’Z’\tconst char* (pointing to C string) -- ?\n    const indirection = _.isObject(type) ? type.indirection : 0;\n    const name = _.isString(type) ? type : type.name;\n\n    if (indirection > 1) {\n        return 'p';\n    }\n    switch (name) {\n        case 'bool':\n            return 'B';\n        case 'char':\n            return 'c';\n        case 'uchar':\n            return 'C';\n        case 'short':\n            return 's';\n        case 'ushort':\n            return 'S';\n        case 'int':\n            return 'i';\n        case 'uint':\n            return 'I';\n        case 'long':\n            return 'j';\n        case 'ulong':\n            return 'J';\n        case 'longlong':\n            return 'l';\n        case 'ulonglong':\n            return 'L';\n        case 'float':\n            return 'f';\n        case 'double':\n            return 'd';\n        case 'int8':\n            return getTypeCode('char');\n        case 'uint8':\n            return getTypeCode('uchar');\n        case 'int16':\n            return getTypeCode('short');\n        case 'uint16':\n            return getTypeCode('ushort');\n        case 'int32':\n            return getTypeode('int');\n        case 'uint32':\n            return getTypeode('uint');\n        case 'int64':\n            return getTypeCode('longlong');\n        case 'uint64':\n            return getTypeCode('ulonglong');\n        case 'size_t':\n            return getTypeCode('ulong');\n        case 'byte':\n            return getTypeCode('uint8');\n        case 'void':\n            return 'v';\n        default:\n            assert(false, 'Unknonwn type: ' + type.name);\n    }\n}"]}