{"version":3,"sources":["../../lib/FastCallback.js"],"names":["_","require","assert","verify","a","ert","native","util","FunctionDefinition","ref","FastCallback","library","def","isObject","_def","_processArgs","_setResult","_type","callback","_execute","_makeExecuteMethod","factory","makePtr","value","type","isFunction","ptr","_loop","signature","execute","Buffer","undefined","TypeError","processArgsFunc","_makeProcessArgsFunc","resultTypeCode","resultType","code","callArgs","Array","args","length","setResultFunc","_findSetResultFunc","argsPtr","resultPtr","func","result","processArgFuncs","map","_findProcessArgFunc","arg","funcArgs","funcBody","i","Ctx","processArgFunc","ctx","innerFunc","Function","concat","err","Error","apply","arguments","findFastcallFunc","module","exports"],"mappings":"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","file":"FastCallback.js","sourcesContent":["/*\r\nCopyright 2016 Gábor Mező (gabor.mezo@outlook.com)\r\n\r\nLicensed under the Apache License, Version 2.0 (the \"License\");\r\nyou may not use this file except in compliance with the License.\r\nYou may obtain a copy of the License at\r\n\r\n    http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nUnless required by applicable law or agreed to in writing, software\r\ndistributed under the License is distributed on an \"AS IS\" BASIS,\r\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\nSee the License for the specific language governing permissions and\r\nlimitations under the License.\r\n*/\r\n\r\n'use strict';\r\nconst _ = require('lodash');\r\nconst assert = require('assert');\r\nconst verify = require('./verify');\r\nconst a = verify.a;\r\nconst ert = verify.ert;\r\nconst native = require('./native');\r\nconst util = require('util');\r\nconst FunctionDefinition = require('./FunctionDefinition');\r\nconst ref = require('./ref-libs/ref');\r\n\r\nclass FastCallback extends FunctionDefinition {\r\n    constructor(library, def) {\r\n        assert(_.isObject(library), '\"library\" is not an object.');\r\n        super(library, def);\r\n        this.library = library;\r\n        this._def = new FunctionDefinition(library, def);\r\n        this._processArgs = null;\r\n        this._setResult = null;\r\n        this._type.callback = this;\r\n    }\r\n\r\n    initialize() {\r\n        this._execute = this._makeExecuteMethod();\r\n    }\r\n\r\n    get execute() {\r\n        assert(this._execute, 'FastCallback is not initialized.');\r\n        return this._execute;\r\n    }\r\n\r\n    getFactory() {\r\n        const factory = value => this.makePtr(value);\r\n        factory.callback = this;\r\n        factory.type = this.type;\r\n        return factory;\r\n    }\r\n\r\n    makePtr(value) {\r\n        if (value) {\r\n            if (value.callback === this) {\r\n                return value;\r\n            }\r\n            if (_.isFunction(value)) {\r\n                const ptr = native.callback.makePtr(this, this.library._loop, this.signature, this.execute, value);\r\n                a&&ert(ptr.callback === this);\r\n                ptr.type = this.type;\r\n                return ptr;\r\n            }\r\n            if (value instanceof Buffer) {\r\n                if (value.type === undefined) {\r\n                    value.type = this.type;\r\n                }\r\n                if (value.callback === undefined) {\r\n                    value.callback = this;\r\n                }\r\n                if (value.callback === this) {\r\n                    return value;\r\n                }\r\n                throw new TypeError('Buffer is not a callback pointer.');\r\n            }\r\n        }\r\n        else if (value === null) {\r\n            return null;\r\n        }\r\n        throw new TypeError('Cannot make callback from: ' + value);\r\n    }\r\n\r\n    _makeExecuteMethod() {\r\n        const processArgsFunc = this._makeProcessArgsFunc();\r\n        const resultTypeCode = this.resultType.code;\r\n        const callArgs = new Array(this.args.length);\r\n        if (resultTypeCode !== 'v') {\r\n            const setResultFunc = this._findSetResultFunc();\r\n            return (argsPtr, resultPtr, func) => {\r\n                processArgsFunc(argsPtr, callArgs);\r\n                const result = func(...callArgs);\r\n                setResultFunc(resultPtr, result);\r\n            };\r\n        }\r\n        return (argsPtr, resultPtr, func) => {\r\n            processArgsFunc(argsPtr, callArgs);\r\n            func(...callArgs);\r\n        };\r\n    }\r\n\r\n    _makeProcessArgsFunc() {\r\n        const processArgFuncs = this.args.map(arg => this._findProcessArgFunc(arg.type));\r\n        const funcArgs = ['argsPtr', 'callArgs'];\r\n        let funcBody = '';\r\n        for (let i = 0; i < processArgFuncs.length; i++) {\r\n            funcBody += `callArgs[${ i }] = this.processArgFunc${ i }(argsPtr);`;\r\n        }\r\n\r\n        class Ctx {\r\n            constructor(callback) {\r\n                let i = 0;\r\n                for (const processArgFunc of processArgFuncs) {\r\n                    this['processArgFunc' + i++] = processArgFunc.func;\r\n                }\r\n            }\r\n        }\r\n\r\n        const ctx = new Ctx(this);\r\n\r\n        let innerFunc;\r\n        try {\r\n            innerFunc = new Function(...funcArgs.concat([funcBody]));\r\n        }\r\n        catch (err) {\r\n            throw Error('Invalid function body: ' + funcBody);\r\n        }\r\n\r\n        const func = function () {\r\n            return innerFunc.apply(ctx, arguments);\r\n        };\r\n        func.callback = this;\r\n        return func;\r\n    }\r\n\r\n     _findProcessArgFunc(type) {\r\n        return this.findFastcallFunc(native.callback, 'arg', type);\r\n    }\r\n\r\n    _findSetResultFunc() {\r\n        return this.findFastcallFunc(native.callback, 'set', this.resultType).func;\r\n    }\r\n}\r\n\r\nmodule.exports = FastCallback;"]}