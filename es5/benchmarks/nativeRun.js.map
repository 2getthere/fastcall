{"version":3,"sources":["../../benchmarks/nativeRun.js"],"names":["_","require","Promise","async","coroutine","imports","config","common","module","exports","importBenchlib","fastcallWay","lib","includes","modes","console","log","syncRun","asyncRun","ms","interface","measureNativeNumberSyncTest","iterations","showResult","measureNativeStringSyncTest","measureNativeCallbackSyncTest","measureNativeNumberAsyncTest","measureNativeStringAsyncTest","measureNativeCallbackAsyncTest"],"mappings":"AAAA;;;;;;;;;;;;;;;;AAgBA;;AACA,IAAMA,IAAIC,QAAQ,QAAR,CAAV;AACA,IAAMC,UAAUD,QAAQ,UAAR,CAAhB;AACA,IAAME,QAAQD,QAAQE,SAAtB;AACA,IAAMC,UAAUJ,QAAQ,WAAR,CAAhB;AACA,IAAMK,SAASL,QAAQ,UAAR,CAAf;AACA,IAAMM,SAASN,QAAQ,UAAR,CAAf;;AAEAO,OAAOC,OAAP,GAAiBN,8BAAM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BACDE,QAAQK,cAAR,CAAuBC,WAAvB,EADC;;AAAA;AACbC,uBADa;;;AAGnB,wBAAIZ,EAAEa,QAAF,CAAWP,OAAOQ,KAAlB,EAAyB,MAAzB,CAAJ,EAAsC;AAClCC,gCAAQC,GAAR,CAAY,cAAZ;AACAC,gCAAQL,GAAR;AACH;AACD,wBAAIZ,EAAEa,QAAF,CAAWP,OAAOQ,KAAlB,EAAyB,OAAzB,CAAJ,EAAuC;AACnCC,gCAAQC,GAAR,CAAY,eAAZ;AACAE,iCAASN,GAAT;AACH;;AAVkB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAN,EAAjB;;AAaA,SAASK,OAAT,CAAiBL,GAAjB,EAAsB;AAClB,QAAIO,KAAKP,IAAIQ,SAAJ,CAAcC,2BAAd,CAA0Cf,OAAOgB,UAAjD,CAAT;AACAf,WAAOgB,UAAP,CAAkB,YAAlB,EAAgC,CAAhC,EAAmCJ,EAAnC;;AAEAA,SAAKP,IAAIQ,SAAJ,CAAcI,2BAAd,CAA0ClB,OAAOgB,UAAjD,CAAL;AACAf,WAAOgB,UAAP,CAAkB,QAAlB,EAA4B,CAA5B,EAA+BJ,EAA/B;;AAEAA,SAAKP,IAAIQ,SAAJ,CAAcK,6BAAd,CAA4CnB,OAAOgB,UAAnD,CAAL;AACAf,WAAOgB,UAAP,CAAkB,UAAlB,EAA8B,CAA9B,EAAiCJ,EAAjC;AACH;;AAED,SAASD,QAAT,CAAkBN,GAAlB,EAAuB;AACnB,QAAIO,KAAKP,IAAIQ,SAAJ,CAAcM,4BAAd,CAA2CpB,OAAOgB,UAAlD,CAAT;AACAf,WAAOgB,UAAP,CAAkB,YAAlB,EAAgC,CAAhC,EAAmCJ,EAAnC;;AAEAA,SAAKP,IAAIQ,SAAJ,CAAcO,4BAAd,CAA2CrB,OAAOgB,UAAlD,CAAL;AACAf,WAAOgB,UAAP,CAAkB,QAAlB,EAA4B,CAA5B,EAA+BJ,EAA/B;;AAEAA,SAAKP,IAAIQ,SAAJ,CAAcQ,8BAAd,CAA6CtB,OAAOgB,UAApD,CAAL;AACAf,WAAOgB,UAAP,CAAkB,UAAlB,EAA8B,CAA9B,EAAiCJ,EAAjC;AACH","file":"nativeRun.js","sourcesContent":["/*\r\nCopyright 2016 Gábor Mező (gabor.mezo@outlook.com)\r\n\r\nLicensed under the Apache License, Version 2.0 (the \"License\");\r\nyou may not use this file except in compliance with the License.\r\nYou may obtain a copy of the License at\r\n\r\n    http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nUnless required by applicable law or agreed to in writing, software\r\ndistributed under the License is distributed on an \"AS IS\" BASIS,\r\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\nSee the License for the specific language governing permissions and\r\nlimitations under the License.\r\n*/\r\n\r\n'use strict';\r\nconst _ = require('lodash');\r\nconst Promise = require('bluebird');\r\nconst async = Promise.coroutine;\r\nconst imports = require('./imports');\r\nconst config = require('./config');\r\nconst common = require('./common');\r\n\r\nmodule.exports = async(function* () {\r\n    const lib = yield imports.importBenchlib.fastcallWay();\r\n\r\n    if (_.includes(config.modes, 'sync')) {\r\n        console.log('--- sync ---');\r\n        syncRun(lib);\r\n    }\r\n    if (_.includes(config.modes, 'async')) {\r\n        console.log('--- async ---');\r\n        asyncRun(lib);\r\n    }\r\n});\r\n\r\nfunction syncRun(lib) {\r\n    let ms = lib.interface.measureNativeNumberSyncTest(config.iterations);\r\n    common.showResult('addNumbers', 3, ms);\r\n\r\n    ms = lib.interface.measureNativeStringSyncTest(config.iterations);\r\n    common.showResult('concat', 1, ms);\r\n\r\n    ms = lib.interface.measureNativeCallbackSyncTest(config.iterations);\r\n    common.showResult('callback', 3, ms);\r\n}\r\n\r\nfunction asyncRun(lib) {\r\n    let ms = lib.interface.measureNativeNumberAsyncTest(config.iterations);\r\n    common.showResult('addNumbers', 3, ms);\r\n\r\n    ms = lib.interface.measureNativeStringAsyncTest(config.iterations);\r\n    common.showResult('concat', 1, ms);\r\n\r\n    ms = lib.interface.measureNativeCallbackAsyncTest(config.iterations);\r\n    common.showResult('callback', 3, ms);\r\n}"]}