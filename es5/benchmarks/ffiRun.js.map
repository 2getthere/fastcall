{"version":3,"sources":["../../benchmarks/ffiRun.js"],"names":["Promise","require","async","coroutine","imports","config","assert","common","module","exports","importBenchlib","ffiWay","lib","console","log","syncRun","asyncRun","result","measure","addNumbersExp","addNumbersAsync","promisify","measureAsync"],"mappings":"AAAA;;AACA,IAAMA,UAAUC,QAAQ,UAAR,CAAhB;AACA,IAAMC,QAAQF,QAAQG,SAAtB;AACA,IAAMC,UAAUH,QAAQ,WAAR,CAAhB;AACA,IAAMI,SAASJ,QAAQ,UAAR,CAAf;AACA,IAAMK,SAASL,QAAQ,QAAR,CAAf;AACA,IAAMM,SAASN,QAAQ,UAAR,CAAf;;AAEAO,OAAOC,OAAP,GAAiBP,8BAAM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BACDE,QAAQM,cAAR,CAAuBC,MAAvB,EADC;;AAAA;AACbC,uBADa;;;AAGnBC,4BAAQC,GAAR,CAAY,cAAZ;AACAC,4BAAQH,GAAR;AACAC,4BAAQC,GAAR,CAAY,eAAZ;AALmB;AAAA,2BAMbE,SAASJ,GAAT,CANa;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAN,EAAjB;;AASA,SAASG,OAAT,CAAiBH,GAAjB,EAAsB;AAClB,QAAIK,SAAS,CAAb;AACAV,WAAOW,OAAP,CAAe,YAAf,EAA6B,CAA7B,EAAgC,YAAM;AAClCD,iBAASL,IAAIO,aAAJ,CAAkBP,IAAIO,aAAJ,CAAkB,GAAlB,EAAuB,CAAvB,CAAlB,EAA6CP,IAAIO,aAAJ,CAAkB,GAAlB,EAAuB,CAAvB,CAA7C,CAAT;AACH,KAFD;AAGAb,WAAOW,WAAW,MAAM,CAAN,GAAU,CAAV,GAAc,CAAhC;AACH;;AAED,IAAID,WAAWd,8BAAM,kBAAWU,GAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AACbK,0BADa,GACJ,CADI;AAEXG,mCAFW,GAEQpB,QAAQqB,SAAR,CAAkBT,IAAIO,aAAJ,CAAkBjB,KAApC,CAFR;AAAA;AAAA,2BAGXK,OAAOe,YAAP,CAAoB,YAApB,EAAkC,CAAlC,EAAqCpB,8BAAM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+CACRkB,gBAAgB,GAAhB,EAAqB,CAArB,CADQ;;AAAA;AAAA;AAAA;AAAA,+CACuBA,gBAAgB,GAAhB,EAAqB,CAArB,CADvB;;AAAA;AAAA;AAAA;AAAA,+CAC9BA,eAD8B;;AAAA;AAC7CH,8CAD6C;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAAN,EAArC,CAHW;;AAAA;AAMjBX,2BAAOW,WAAW,MAAM,CAAN,GAAU,CAAV,GAAc,CAAhC;;AANiB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAN,EAAf","file":"ffiRun.js","sourcesContent":["'use strict';\nconst Promise = require('bluebird');\nconst async = Promise.coroutine;\nconst imports = require('./imports');\nconst config = require('./config');\nconst assert = require('assert');\nconst common = require('./common');\n\nmodule.exports = async(function* () {\n    const lib = yield imports.importBenchlib.ffiWay();\n\n    console.log('--- sync ---');\n    syncRun(lib);\n    console.log('--- async ---');\n    yield asyncRun(lib);\n});\n\nfunction syncRun(lib) {\n    let result = 0;\n    common.measure('addNumbers', 3, () => {\n        result = lib.addNumbersExp(lib.addNumbersExp(5.5, 5), lib.addNumbersExp(1.1, 1));\n    });\n    assert(result === 5.5 + 5 + 1 + 1);\n}\n\nvar asyncRun = async(function* (lib) {\n    let result = 0;\n    const addNumbersAsync =  Promise.promisify(lib.addNumbersExp.async);\n    yield common.measureAsync('addNumbers', 3, async(function* () {\n        result = yield addNumbersAsync(yield addNumbersAsync(5.5, 5), yield addNumbersAsync(1.1, 1));\n    }));\n    assert(result === 5.5 + 5 + 1 + 1);\n});"]}