{"version":3,"sources":["../../../test/suites/raii.js"],"names":["_","require","assert","Promise","async","coroutine","fastcall","scope","Disposable","Tester","disposeFunction","memUse","doAsync","f","describe","before","global","gc","it","disposed","dispose","value","result","delay","counter","value2","value3","equal"],"mappings":"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","file":"raii.js","sourcesContent":["/*\nCopyright 2016 Gábor Mező (gabor.mezo@outlook.com)\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n*/\n\n'use strict';\nconst _ = require('lodash');\nconst assert = require('assert');\nconst Promise = require('bluebird');\nconst async = Promise.coroutine;\nconst fastcall = require('../../lib');\nconst scope = fastcall.scope;\nconst Disposable = fastcall.Disposable;\n\nclass Tester extends Disposable {\n    constructor(disposeFunction, memUse) {\n        super(disposeFunction, memUse);\n    }\n}\n\nfunction doAsync(f) {\n    return async(f)();\n}\n\ndescribe('RAII scope', function () {\n    before(function () {\n        assert(global.gc, 'GC is not enabled.');\n    });\n\n    describe('sync', function () {\n        it('should propagate value to parent scope', function () {\n            let disposed = false;\n            const dispose = () => disposed = true;\n            scope(() => {\n                scope(() => {\n                    assert(!disposed);\n                    const value = new Tester(dispose);\n                    assert(!disposed);\n                    return value;\n                });\n                assert(!disposed);\n            });\n            assert(disposed);\n        });\n\n        it('should detach value at root scope', function () {\n            let disposed = false;\n            const dispose = () => disposed = true;\n            scope(() => {\n                const result = scope(() => {\n                    assert(!disposed);\n                    const value = new Tester(dispose);\n                    assert(!disposed);\n                    return value;\n                });\n                assert(!disposed);\n                return result;\n            });\n            assert(!disposed);\n        });\n\n        it('should propagate array to parent scope', function () {\n            let disposed = false;\n            const dispose = () => disposed = true;\n            scope(() => {\n                scope(() => {\n                    assert(!disposed);\n                    const value = new Tester(dispose);\n                    assert(!disposed);\n                    return [value];\n                });\n                assert(!disposed);\n            });\n            assert(disposed);\n        });\n\n        it('should propagate object to parent scope', function () {\n            let disposed = false;\n            const dispose = () => disposed = true;\n            scope(() => {\n                scope(() => {\n                    assert(!disposed);\n                    const value = new Tester(dispose);\n                    assert(!disposed);\n                    return { value };\n                });\n                assert(!disposed);\n            });\n            assert(disposed);\n        });\n\n        it('should propagate array of objects to parent scope', function () {\n            let disposed = false;\n            const dispose = () => disposed = true;\n            scope(() => {\n                scope(() => {\n                    assert(!disposed);\n                    const value = new Tester(dispose);\n                    assert(!disposed);\n                    return [{ value }, { value }];\n                });\n                assert(!disposed);\n            });\n            assert(disposed);\n        });\n    });\n\n    describe('async', function () {\n        it('should propagate value to parent scope', function () {\n            return doAsync(function* () {\n                let disposed = false;\n                const dispose = () => disposed = true;\n                yield scope.async(function* () {\n                    yield scope.async(function* () {\n                        assert(!disposed);\n                        const value = new Tester(dispose);\n                        assert(!disposed);\n                        yield Promise.delay(1);\n                        return value;\n                    });\n                    assert(!disposed);\n                });\n                assert(disposed);\n            });\n        });\n    });\n\n    describe('dispose', function () {\n        it('GC should call dispose method', function () {\n            let counter = 0;\n            const dispose = () => counter++;\n            let value2;\n            const f = () => {\n                const value = new Tester(dispose);\n                gc();\n                assert(!counter);\n                value2 = value;\n                value2 = new Tester(dispose, 42);\n                assert(!counter);\n                gc();\n            };\n            let value3 = new Tester(dispose);\n\n            f();\n            assert(!counter);\n            gc();\n            assert.equal(counter, 1);\n            value2 = null;\n            gc();\n            assert.equal(counter, 2);\n            value3.dispose();\n            assert.equal(counter, 3);\n            value3 = null;\n            gc();\n            assert.equal(counter, 3);\n        });\n    });\n});"]}